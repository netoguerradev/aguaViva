console.log("[import] git: 91852efc9760334dbff0511262e049092dddfffe, stamp: 558501EAEE9322E8");
!function(){let e,t=e=>{};function r(t){e=t}function n(e){t=e}function o(e){t(e)}let s=!1;function i(){console.log("cancelConversion"),s=!0,g&&(g.terminate(),g=null),f&&(f=null);for(let e in m){let t=m[e];delete m[e],t.reject(new Error("Canceled import."))}}function l(){return s}function a(){s=!1}function c(e,t){let r=e.dataTransfer,n=Array.prototype.forEach;function o(e,r){if(l())return;let n=new FileReader;n.onload=()=>{l()?console.log("reader loaded. canceled -- skipping callback"):t(r,new Uint8Array(n.result))},n.readAsArrayBuffer(e)}if(a(),r.items){let e=!1;if(n.call(r.items,t=>{if(t.webkitGetAsEntry){let r=t.webkitGetAsEntry();if(r){let t=r.name;r.isDirectory?r.getFile("Data",null,e=>e.file(e=>o(e,t))):r.isFile&&r.file(e=>o(e,t)),e=!0}}}),e)return}n.call(r.files,e=>o(e,e.name))}let f=null,u=!0;function d(){u=!1}function p(){if(!f){let t=e||"import.worker.js",r=e=>{try{g=new Worker(e)}catch(e){throw f=null,new Error("Failed to load the web worker. Please contact Figma for support.")}return g.onmessage=w,g};f=u?function(e,t){return new Promise((r,n)=>{let o=new XMLHttpRequest;o.onload=()=>{o.status>=200&&o.status<400&&r(o.response)},o.onloadend=()=>{n(new Error("Failed to download the file importer. Please make sure you're connected to the internet and try again."))},o.open("GET",e),o.responseType=t,o.send(null)})}(t,"blob").then(e=>r(URL.createObjectURL(e))):new Promise((e,n)=>{e(r(t))})}return f}let g=null,m={},b=0;function w(e){let r=e.data;switch(r.type){case"ConversionFailureResponse":{let e=r;if(e.id in m){let t=m[e.id];delete m[e.id];let r=e.error;r.inferredFormat=e.inferredFormat,r.warnings=e.warnings,r.reportError=e.reportError,e.originalError&&(r.cause=e.originalError),t.reject(r)}break}case"ConversionSuccessResponse":{let e=r;if(e.id in m){let r=m[e.id];delete m[e.id],l()?(t(100),r.reject(new Error("Import canceled"))):(t(20),r.resolve(e.result))}break}case"UpdateProgressMessage":{let e=r;t&&t(e.percentage);break}case"LoadFontMessage":{let t=r,n=m[t.id];(n&&n.fontLoader?n.fontLoader.getFont(t.postscript):Promise.reject(null)).then(r=>{let n={type:"FontLoadedMessage",id:t.id,postscript:t.postscript,result:r};e.target.postMessage(n,[r.font.buffer])}).catch(()=>{let r={type:"FontLoadedMessage",id:t.id,postscript:t.postscript,result:null};e.target.postMessage(r)});break}default:console.warn("import shim got unsupported message: "+r.type)}}function F(e,t){if(e.length<t.length)return!1;for(let r=0;r<t.length;r++)if(e[r]!==t[r])return!1;return!0}function y(e){return p().then(t=>new Promise((r,n)=>{let o=e.message.id;m[o]={resolve:r,reject:n,fontLoader:e.fontLoader},t.postMessage(e.message,e.buffers)}))}function h({bytes:e,featureFlags:t,fontLoader:r,isUserFigmaEmployee:n,fileExtension:o}){return new Promise((s,i)=>{if(!l())if(E(e)||k(e)){let t=URL.createObjectURL(new Blob([e])),n=new Image;n.onerror=()=>{i({message:"Invalid image",stack:(new Error).stack})},n.onload=()=>{y({message:{type:"ImageConversionRequest",id:b++,bytes:e,width:n.width,height:n.height},buffers:[e.buffer],fontLoader:r}).then(s,i),URL.revokeObjectURL(t)},n.src=t}else{y({message:{type:"FileConversionRequest",id:b++,bytes:e,featureFlags:t,isUserFigmaEmployee:n,fileExtension:o},buffers:[e.buffer],fontLoader:r}).then(s,i)}})}function E(e){return F(e,[137,80,78,71,13,10,26,10])}function k(e){return F(e,[255,216])}function L(e){return F(e,[71,73,70,56,55,97])||F(e,[71,73,70,56,57,97])}window.createFileImporter=e=>(delete window.createFileImporter,r(e),{convertFile:h,disableWorkerBlob:d,cancelConversion:i,hasCanceled:l,resetCancel:a,setUpdateProgressCallback:n,callUpdateProgressCallback:o,extractFilesFromDropEvent:c,isProbablyJPEGFile:k,isProbablyPNGFile:E,isProbablyGIFFile:L})}();
